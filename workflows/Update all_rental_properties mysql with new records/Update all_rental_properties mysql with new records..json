{
  "active": true,
  "connections": {
    "Email Trigger (IMAP)": {
      "main": [
        [
          {
            "node": "Check Filename",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Filename": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "FTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-07-29T14:03:56.712Z",
  "id": "MP0GdfCLp2mj6e1Z",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Update all_rental_properties mysql with new records.",
  "nodes": [
    {
      "parameters": {
        "downloadAttachments": true,
        "options": {
          "customEmailConfig": "[\"UNSEEN\", [\"SUBJECT\", \"Daily List\"]]"
        }
      },
      "id": "4f373a71-419a-4f86-9f0d-ab3d80799f35",
      "name": "Email Trigger (IMAP)",
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2,
      "position": [
        -320,
        -60
      ],
      "credentials": {
        "imap": {
          "id": "jiJskG7OLUbWOE4M",
          "name": "Reports IMAP account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$binary.attachment_0.fileName}}",
              "operation": "regex",
              "value2": "^report_builder-unit_directory-\\d{8}\\.csv$"
            }
          ]
        }
      },
      "name": "Check Filename",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -120,
        -60
      ],
      "id": "f7931fe5-0b50-44b4-a4de-399ab4a126e2"
    },
    {
      "parameters": {
        "operation": "upload",
        "path": "/public_html/data/full-list.csv"
      },
      "id": "447f3fb3-4b91-4ab8-a075-54f5b1b5c302",
      "name": "FTP",
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        -60,
        180
      ],
      "credentials": {
        "ftp": {
          "id": "87ZwJT7N7b5rycj4",
          "name": "n8n Data FTP account"
        }
      }
    },
    {
      "parameters": {
        "operation": "xls",
        "binaryPropertyName": "attachment_0",
        "options": {
          "headerRow": true
        }
      },
      "id": "d82edb81-d9e5-4ac1-93a4-ab305c83a336",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        100,
        -60
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d7dcbc3d-a6ff-4e6f-a229-8ec3b4ed3de6",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -260,
        180
      ]
    },
    {
      "parameters": {
        "workflowId": "xyabXMpKFXidJwVv",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "id": "51b3492e-584f-401d-a41b-0e6e5e1a6ee3",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        100,
        180
      ],
      "notesInFlow": true,
      "notes": "Blaze Get Photos of Active Properties"
    },
    {
      "parameters": {
        "content": "## Call Workflow\nall_listing and get photos copy"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        280,
        160
      ],
      "id": "13940e2e-b445-4ae6-82e8-7d60f4782767",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Workflow Documentation: **Email to FTP with Image Processing**\n\n## **Workflow Function**\nThis workflow automates the process of retrieving an email with a CSV attachment, validating its filename, extracting and converting its data, uploading it to an FTP server, and triggering a secondary workflow to retrieve associated images.\n\n---\n\n## **Workflow Actions**\n### **1. Email Retrieval**\n- **Node:** `Email Trigger (IMAP)`\n- **Action:** Connects to an IMAP email account to retrieve unseen emails with the subject \"Daily List\".\n- **Credentials Used:** `Reports IMAP account`\n- **Purpose:** Ensures the workflow only processes new, relevant reports.\n\n### **2. Filename Validation**\n- **Node:** `Check Filename`\n- **Action:** Checks if the email attachment matches the pattern `^report_builder-unit_directory-\\d{8}\\.csv$`.\n- **Purpose:** Ensures only correctly formatted report files proceed in the workflow.\n\n### **3. Extract Data from CSV**\n- **Node:** `Extract from File`\n- **Action:** Reads data from the validated CSV file.\n- **Options:** Header row is recognized for structured data extraction.\n- **Purpose:** Prepares data for further processing.\n\n### **4. Convert to File**\n- **Node:** `Convert to File`\n- **Action:** Converts the extracted data into a suitable format for uploading.\n- **Purpose:** Prepares the data for FTP transfer.\n",
        "height": 1320,
        "width": 420
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -780,
        -160
      ],
      "id": "18dc1a40-c2ff-4845-a851-3a76de70ed9e",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "\n### **5. Upload to FTP**\n- **Node:** `FTP`\n- **Action:** Uploads the converted file to `/public_html/data/full-list.csv` on an FTP server.\n- **Credentials Used:** `n8n Data FTP account`\n- **Purpose:** Stores the file in a public-accessible location for further use.\n\n### **6. Execute Secondary Workflow**\n- **Node:** `Execute Workflow`\n- **Action:** Calls the `Blaze Get Photos of Active Properties` workflow.\n- **Options:** Waits for the sub-workflow to complete before proceeding.\n- **Purpose:** Ensures image retrieval and association with the newly uploaded data.\n\n### **7. Notes**\n- **Node:** `Sticky Note`\n- **Content:** \"## Call Workflow all_listing and get photos copy\"\n- **Purpose:** Provides an inline documentation note for reference within the n8n editor.\n\n---\n\n## **Workflow Connections**\n| **From Node**            | **To Node**            | **Purpose** |\n|--------------------------|------------------------|-------------|\n| `Email Trigger (IMAP)`   | `Check Filename`       | Ensures only emails with relevant attachments are processed. |\n| `Check Filename`         | `Extract from File`    | Ensures only correctly named CSV files are processed. |\n| `Extract from File`      | `Convert to File`      | Converts structured data into a usable format. |\n| `Convert to File`        | `FTP`                  | Uploads the processed file to FTP. |\n| `FTP`                   | `Execute Workflow`     | Triggers the workflow to retrieve property photos. |\n\n---\n\n## **Suggested New Workflow Name**\n**`EMAIL_FTP_PropertyListings`**\n- **Prefix (`EMAIL_FTP_`)** indicates it handles email retrieval and file uploads.\n- **`PropertyListings`** describes the type of data being processed.\n\n---\n\n## **Additional Notes**\n- This workflow is **dependent** on the `Blaze Get Photos of Active Properties` workflow.\n- If any step fails, logs should be checked for IMAP retrieval issues, filename mismatches, or FTP errors.\n- To modify this workflow for another data type, update the filename validation pattern and FTP destination.\n\n---\n**Maintainer:** [Brandon Blaze](https://github.com/brandonblaze1/n8n-repository)  \n_Last Updated:_ `March 2025`\n",
        "height": 1240,
        "width": 860
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -340,
        360
      ],
      "id": "7d848a1e-0b01-4f50-b483-175dedb19498",
      "name": "Sticky Note2"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "errorWorkflow": "Etm1h3dHXQYzby5C",
    "saveExecutionProgress": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {
    "node:Email Trigger (IMAP)": {
      "lastMessageUid": 2332
    }
  },
  "tags": [
    {
      "createdAt": "2024-08-17T11:18:55.333Z",
      "updatedAt": "2024-08-17T11:18:55.333Z",
      "id": "U78FzotGmLCLNkwS",
      "name": "sql"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-03-07T18:43:21.000Z",
  "versionId": "b6c566fe-3ae6-4266-9245-42dddf47a762"
}