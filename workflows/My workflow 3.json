{
  "active": false,
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "MySQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-08-27T20:56:19.053Z",
  "id": "cYY7VMQwC9FqJVLy",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My workflow 3",
  "nodes": [
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "weekly_data",
          "mode": "list",
          "cachedResultName": "weekly_data"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "name",
              "value": "={{ $json.name }}"
            },
            {
              "column": "email",
              "value": "={{ $json.email }}"
            },
            {
              "column": "location",
              "value": "={{ $json.location }}"
            },
            {
              "column": "occupancy",
              "value": "={{ $json.occupancy }}"
            },
            {
              "column": "delinquency",
              "value": "={{ $json.delinquency }}"
            },
            {
              "column": "guests",
              "value": "={{ $json.guests }}"
            },
            {
              "column": "applications",
              "value": "={{ $json.applications }}"
            },
            {
              "column": "move_ins",
              "value": "={{ $json.move_ins }}"
            },
            {
              "column": "ready_units",
              "value": "={{ $json.ready_units }}"
            },
            {
              "column": "goodnews",
              "value": "={{ $json.goodnews }}"
            },
            {
              "column": "headlines",
              "value": "={{ $json.headlines }}"
            },
            {
              "column": "issues",
              "value": "={{ $json.issues }}"
            },
            {
              "column": "datetime",
              "value": "={{ $json.datetime }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e15b2101-9d34-47ab-b80c-75feb68d5509",
      "name": "MySQL",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1260,
        360
      ],
      "credentials": {
        "mySql": {
          "id": "Cxxv6w2tRXt2wyu4",
          "name": "n8n database"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n    if (item.json.body['[datetime]'] && typeof item.json.body['[datetime]'] === 'string') {\n        const dateString = item.json.body['[datetime]'];\n        // Convert the date format from MM/DD/YYYY - HH:MM:SS to YYYY-MM-DD HH:MM:SS\n        const formattedDate = dateString.replace(\n            /(\\d{2})\\/(\\d{2})\\/(\\d{4}) - (\\d{2}):(\\d{2}):(\\d{2})/,\n            '$3-$1-$2 $4:$5:$6'\n        );\n        item.json.body['[datetime]'] = formattedDate;\n    }\n    return {\n        json: {\n            name: item.json.body['[name]'],\n            email: item.json.body['[email]'],\n            location: item.json.body['[location]'],\n            occupancy: parseInt(item.json.body['[occupancy]']),\n            delinquency: parseInt(item.json.body['[delinquency]']),\n            guests: parseInt(item.json.body['[guests]']),\n            applications: parseInt(item.json.body['[applications]']),\n            move_ins: parseInt(item.json.body['[move-ins]']),\n            ready_units: parseInt(item.json.body['[ready-units]']),\n            goodnews: item.json.body['[goodnews]'],\n            headlines: item.json.body['[headlines]'],\n            issues: item.json.body['[issues]'],\n            datetime: item.json.body['[datetime]'],\n            ip: item.json.body['[ip]']\n        }\n    };\n});\n"
      },
      "id": "f5f5a984-3557-4f46-8ed7-5b3aec5eb1e2",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        360
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "e6b86af3-8083-4961-a17d-a83fdebf8b2f",
        "options": {}
      },
      "id": "d79448c7-9a21-41bd-9437-59b4ac091a87",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        820,
        360
      ],
      "webhookId": "e6b86af3-8083-4961-a17d-a83fdebf8b2f"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-08-27T21:16:04.000Z",
  "versionId": "714f702e-db34-4e48-b1fc-48282e2e5384"
}