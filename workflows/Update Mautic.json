{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "FTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Mautic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mautic": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-08-08T12:56:04.576Z",
  "id": "3R5G29jOfBW34ouM",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Update Mautic",
  "nodes": [
    {
      "parameters": {},
      "id": "469a0965-7ae6-41dd-883c-ce91764fba6c",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        120,
        360
      ]
    },
    {
      "parameters": {
        "path": "/data.blzres.com/data/tenant_directory.csv"
      },
      "id": "e658683b-0f30-4da8-933d-2d32576622e5",
      "name": "FTP",
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        280,
        360
      ],
      "credentials": {
        "ftp": {
          "id": "87ZwJT7N7b5rycj4",
          "name": "FTP account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "delimiter": ",",
          "headerRow": true,
          "includeEmptyCells": true,
          "fromLine": 1
        }
      },
      "id": "cc0c98fd-fb76-488a-932a-dd32ca84a520",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        500,
        360
      ]
    },
    {
      "parameters": {
        "email": "={{ $json.firstEmail }}",
        "firstName": "={{ $json['First Name'] }}",
        "lastName": "={{ $json['Last Name'] }}",
        "company": "Blaze Real Estate PM",
        "additionalFields": {
          "addressUi": {
            "addressValues": {
              "address1": "={{ $json['Tenant Street Address 1'] }}",
              "address2": "={{ $json['Tenant Street Address 2'] }}",
              "city": "={{ $json['Tenant City'] }}",
              "state": "={{ $json['Tenant State'] }}",
              "zipCode": "={{ $json['Tenant Zip'] }}"
            }
          },
          "customFieldsUi": {
            "customFieldValues": [
              {
                "fieldId": "birthdate",
                "fieldValue": "={{ $json['Tenant Birthdate'] }}"
              },
              {
                "fieldId": "move_in_date",
                "fieldValue": "={{ $json['Move-in'] }}"
              },
              {
                "fieldId": "lease_end_date",
                "fieldValue": "={{ $json['Lease To'] }}"
              },
              {
                "fieldId": "property",
                "fieldValue": "={{ $json.Property }}"
              },
              {
                "fieldId": "unit",
                "fieldValue": "={{ $json.Unit }}"
              }
            ]
          },
          "mobile": "={{ $json.extractedPhoneNumber }}"
        },
        "options": {}
      },
      "id": "cfa21e88-6f1c-4bc3-8194-a7b4217edb00",
      "name": "Mautic",
      "type": "n8n-nodes-base.mautic",
      "typeVersion": 1,
      "position": [
        1500,
        360
      ],
      "credentials": {
        "mauticApi": {
          "id": "5tdqtoSOtaUwNpSz",
          "name": "Mautic account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "41c309e2-ed6c-48c3-8006-c32226a1f2e4",
              "leftValue": "={{ $json.Emails }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ac49ef8e-60ab-47f0-992d-d00c9926b6fa",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        700,
        360
      ]
    },
    {
      "parameters": {
        "jsCode": "const stateAbbreviations = {\n  \"AL\": \"Alabama\", \"AK\": \"Alaska\", \"AZ\": \"Arizona\", \"AR\": \"Arkansas\", \"CA\": \"California\", \n  \"CO\": \"Colorado\", \"CT\": \"Connecticut\", \"DE\": \"Delaware\", \"FL\": \"Florida\", \"GA\": \"Georgia\", \n  \"HI\": \"Hawaii\", \"ID\": \"Idaho\", \"IL\": \"Illinois\", \"IN\": \"Indiana\", \"IA\": \"Iowa\", \n  \"KS\": \"Kansas\", \"KY\": \"Kentucky\", \"LA\": \"Louisiana\", \"ME\": \"Maine\", \"MD\": \"Maryland\", \n  \"MA\": \"Massachusetts\", \"MI\": \"Michigan\", \"MN\": \"Minnesota\", \"MS\": \"Mississippi\", \"MO\": \"Missouri\", \n  \"MT\": \"Montana\", \"NE\": \"Nebraska\", \"NV\": \"Nevada\", \"NH\": \"New Hampshire\", \"NJ\": \"New Jersey\", \n  \"NM\": \"New Mexico\", \"NY\": \"New York\", \"NC\": \"North Carolina\", \"ND\": \"North Dakota\", \"OH\": \"Ohio\", \n  \"OK\": \"Oklahoma\", \"OR\": \"Oregon\", \"PA\": \"Pennsylvania\", \"RI\": \"Rhode Island\", \"SC\": \"South Carolina\", \n  \"SD\": \"South Dakota\", \"TN\": \"Tennessee\", \"TX\": \"Texas\", \"UT\": \"Utah\", \"VT\": \"Vermont\", \n  \"VA\": \"Virginia\", \"WA\": \"Washington\", \"WV\": \"West Virginia\", \"WI\": \"Wisconsin\", \"WY\": \"Wyoming\"\n};\n\n// Get the input data from the previous node\nconst input = $json[\"Phone Numbers\"];\nconst emailsInput = $json[\"Emails\"];\n\n// Map the state abbreviation to the full name\nconst stateAbbr = $json[\"Tenant State\"];\nconst fullStateName = stateAbbreviations[stateAbbr] || stateAbbr;\n\n// Regex to extract the first email\nconst emailRegex = /[\\w\\.-]+@[\\w\\.-]+\\.\\w+/;\nconst firstEmail = emailsInput ? emailsInput.match(emailRegex)[0] : null;\n\n// Regular expression to extract the phone number\nconst phoneNumberRegex = /(\\+?\\d{1,2})?\\s?\\(?\\d{3}\\)?[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}/;\nconst phoneNumberMatch = input.match(phoneNumberRegex);\n\n// Return the extracted data or null if not found\nif (input) {\n  return [\n    {\n      json: {\n        extractedPhoneNumber: phoneNumberMatch ? phoneNumberMatch[0].trim() : null,\n        firstEmail: firstEmail,\n        originalPhoneNumbers: input,\n        Emails: $json[\"Emails\"],\n        \"First Name\": $json[\"First Name\"],\n        \"Last Name\": $json[\"Last Name\"],\n        \"Tenant Street Address 1\": $json[\"Tenant Street Address 1\"],\n        \"Tenant Street Address 2\": $json[\"Tenant Street Address 2\"],\n        \"Tenant City\": $json[\"Tenant City\"],\n        \"Tenant State\": fullStateName,\n        \"Tenant Zip\": $json[\"Tenant Zip\"],\n        \"Tenant Birthdate\": $json[\"Tenant Birthdate\"],\n        \"Move-in\": $json[\"Move-in\"],\n        \"Lease To\": $json[\"Lease To\"],\n        \"Property\": $json[\"Property\"],\n        \"Unit\": $json[\"Unit\"]\n      }\n    }\n  ];\n} else {\n  return [\n    {\n      json: {\n        extractedPhoneNumber: null,\n        firstEmail: null,\n        originalPhoneNumbers: input\n      }\n    }\n  ];\n}\n"
      },
      "id": "e4f92767-78b2-4bfa-bd25-386371224a5c",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1200,
        360
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "dc40bc5c-7279-44dc-9ef4-93b46b37a696",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        920,
        360
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-08-08T19:05:05.000Z",
  "versionId": "6301dcd1-35a6-4264-9a56-48301efe3cb2"
}